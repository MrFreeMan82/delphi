unit uAccessRightRule;

interface
uses SysUtils, Classes, uData, Controls;

  procedure SetWindowAccessState(userType:integer; window:TComponent);
implementation


function isOurUserType(ut_id: integer; enabledUsers: string):boolean;
var sl: TStringList;
    i:integer;
begin
     if enabledUsers = '*' then exit(true);

     i := 0;
     result := false;
     sl := TStringList.Create;
     sl.Delimiter := ';';
     sl.StrictDelimiter := true;
     sl.DelimitedText := trim(enabledUsers);

     while (result <> true) or (i < sl.Count) do
     begin
          result := strToInt(sl[i]) = ut_id;
          inc(i);
     end;

     freeAndNil(sl);
end;

// Ищет объект через Components и Controls по указанному пути,
// начиная я объекта top. Если top не указан, то начинает с Application.
function FindObject(top:TComponent; objectName:String; alertIfNotFound:boolean): TComponent;

	// Найди мне контрол по имени childName хоть где-нибудь - хоть в
	// .Controls, хоть в .Components!
	function FindAnything(parent:TComponent; childName:String): TComponent;
	var
		tmp:TComponent;
	begin
		tmp:=nil;
		Result:=nil;

		if (parent is TWinControl) then
			tmp:=TWinControl(parent).FindChildControl(childName);

		if (tmp=nil) then
			tmp:=parent.FindComponent(childName);

		if (tmp<>nil) then
			Result:=tmp;
	end;
var
	maxFound:TComponent;
begin
	Result:=nil;
	maxFound := top;

	try
    maxFound := FindAnything(maxFound, objectName);

		if ((maxFound = nil) and (alertIfNotFound)) then

//+			MessageDlg('Объект не найден: '+top.Name+'::'+path+' - '+sl[cnt-1],mtError,[mbOk],0)

		else
			Result := maxFound;

	finally

	end;
end;

procedure ApplyRule(ut_id: integer;
										window: TComponent;
										enabledUsers, targetObject, checkObject, checkMode:string;
										checkObjectValue: double;
										action: String);

var sl:TStringList;
	  i:integer;
    checkObjectFound:TComponent;
    objectVal:double;
begin
      if not isOurUserType(ut_id, enabledUsers) then exit;

      sl := TStringList.Create;
      sl.Delimiter := ';';
      sl.StrictDelimiter := true;
      sl.DelimitedText := trim(targetObject);

      freeAndNil(sl);
end;

       // Находит все правила, связанные с этим окном, и устанавливает их
procedure SetWindowAccessState(userType:integer; window:TComponent);

begin
     data.qAccessRight.Close;
     data.qAccessRight.ParamByName('wnd').AsString := window.Name;
     data.qAccessRight.Open;

     if data.qAccessRight.IsEmpty then exit;

     while not data.qAccessRight.Eof do
     begin
        ApplyRule(userType,
                  window,
                  data.qAccessRightARR_USER_TYPES.AsString,
                  data.qAccessRightARR_TARGET_OBJECT_NAME.AsString,
                  data.qAccessRightARR_CHECK_OBJECT_NAME.AsString,
                  data.qAccessRightARR_CHECK_MODE.AsString,
                  data.qAccessRightARR_CHECK_OBJECT_VALUE.AsFloat,
                  data.qAccessRightARR_ACTION.AsString);

        data.qAccessRight.Next
     end;

end;

end.
